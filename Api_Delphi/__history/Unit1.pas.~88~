unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  Vcl.StdCtrls, IdHTTP, IdSSLOpenSSL, Vcl.ExtCtrls, IdCookieManager;

type
    TForm1 = class(TForm)
    pnlMenu: TPanel;
    btnEnviar: TButton;
    btnPesquisar: TButton;
    btnPesquisa: TButton;
    btnCadastrar: TButton;
    pnlFormulario: TPanel;
    pnlPesquisa: TPanel;
    LabelNome: TLabel;
    LabelNumero: TLabel;
    LabelNumeroPesquisa: TLabel;
    EditNumeroPesquisa: TEdit;
    EditNome: TEdit;
    EditNumero: TEdit;
    HTTP: TIdHTTP;
    Memo: TMemo;
    procedure btnEnviarClick(Sender: TObject);
    procedure btnCadastrarClick(Sender: TObject);
    procedure btnPesquisarClick(Sender: TObject);
    procedure btnListarClick(Sender: TObject);
    procedure EditNumeroKeyPress(Sender: TObject; var Key: Char);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
implementation

{$R *.dfm}

procedure TForm1.btnCadastrarClick(Sender: TObject);
begin
  pnlFormulario.Visible := True;
  pnlPesquisa.Visible := False;
  LabelNumero.Caption := AnsiToUTF8('Número');
end;


procedure TForm1.btnPesquisarClick(Sender: TObject);
begin
  pnlFormulario.Visible := False;
  pnlPesquisa.Visible := True;
  LabelNumeroPesquisa.Caption := AnsiToUTF8('Número');

end;


procedure TForm1.btnEnviarClick(Sender: TObject);
var
  j: string;
  JsonToSend: TStringStream;
  HTTP: TIdHTTP;
  CookieManager: TIdCookieManager;
  Response: string;
begin
    HTTP := TIdHTTP.Create(nil);
    //HTTP.Request.CacheControl := 'no-cache';
    HTTP.Request.ContentType  := 'application/json';
    HTTP.Request.ContentEncoding:= 'utf-8';
    try
    j:= '{"nome": "' + EditNome.Text +
          '","numero": "' + EditNumero.Text + '"}';
    JsonToSend := TStringStream.Create(j, TEncoding.UTF8);

    Response := HTTP.post('http://localhost:8000/registros/', JsonToSend);

    except
      on E: EIdHTTPProtocolException do
      begin
        if E.ErrorCode = 500 then
          ShowMessage('⚠ O banco de dados está cheio. Tente novamente mais tarde.')
        else if E.ErrorCode = 404 then
          try
            Response := HTTP.get('http://localhost:8000/registros/verifica_erro')
            except
              on ERROR: EIdHTTPProtocolException do
                begin
                  if ERROR.ErrorCode = 301 then
                    ShowMessage('O banco de dados chegou a 5 registros')
                  else
                    ShowMessage('Servidor indisponível! Tente novamente mais tarde.');
                end;
            end;
          end
        else
          ShowMessage('Erro ');
      end;
    end;
    HTTP.Free;
end;

procedure TForm1.EditNumeroKeyPress(Sender: TObject; var Key: Char);
begin
    // Permite apenas números e backspace
    if not CharInSet(Key, ['0'..'9', #8]) then
      Key := #0;
end;

procedure TForm1.btnListarClick(Sender: TObject);
var
HTTP : TIdHTTP;
Form: TForm1;
Response: string;
begin
  Form := TForm1.Create(nil);
  try
    HTTP := TIdHTTP.Create(nil);
    HTTP.Request.CacheControl := 'no-cache';
    HTTP.Request.Accept  := 'application/json';
    HTTP.Request.ContentEncoding:= 'utf-8';
    Response := HTTP.get('http://localhost:8000/pesquisa/' + EditNumeroPesquisa.Text);
    Form.Caption := 'Resposta da API';
    Form.Position := poScreenCenter;
    Form.Width := 600;
    Form.Height := 400;
    Memo := TMemo.Create(Form);
    Memo.Parent := Form;
    Memo.Align := alClient;
    Memo.ScrollBars := ssBoth;
    Memo.WordWrap := False;
    Memo.Lines.Text := Response;
  
    Form.ShowModal;
  finally
    HTTP.Free;
    Form.Free;
  end;
end;


end.
